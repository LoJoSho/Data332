-- 1
CREATE VIEW LSCHULZMAJOR_CUSTOMER as(
SELECT CUST_ID, FIRST_NAME, LAST_NAME, BALANCE, CREDIT_LIMIT, REP_ID
FROM CUSTOMER
WHERE CREDIT_LIMIT < 500
)
---b
SELECT CUST_ID,FIRST_NAME,LAST_NAME 
FROM LSCHULZMAJOR_CUSTOMER
WHERE BALANCE < CREDIT_LIMIT
---c
DROP VIEW LSCHULZMAJOR_CUSTOMER
-- 2
CREATE VIEW LSCHULZITEM_INVOICE as(
SELECT INVOICE_LINE.ITEM_ID, ITEM.DESCRIPTION, INVOICE_LINE.INVOICE_NUM, INVOICES.INVOICE_DATE, INVOICE_LINE.QUANTITY, INVOICE_LINE.QUOTED_PRICE
FROM INVOICE_LINE, ITEM, INVOICES
WHERE INVOICE_LINE.ITEM_ID = ITEM.ITEM_ID AND INVOICE_LINE.INVOICE_NUM = INVOICES.INVOICE_NUM
)
---b
SELECT ITEM_ID, DESCRIPTION, INVOICE_NUM, QUOTED_PRICE 
FROM LSCHULZITEM_INVOICE
WHERE QUOTED_PRICE > 100
---c
DROP VIEW LSCHULZITEM_INVOICE
-- 3
CREATE VIEW LSCHULZINVOICE_TOTAL as(
SELECT INVOICE_LINE.INVOICE_NUM, SUM(QUOTED_PRICE * QUANTITY) as INVOICE_TOTAL
FROM INVOICE_LINE
GROUP BY INVOICE_NUM
)
---b
SELECT INVOICE_NUM, INVOICE_TOTAL
FROM LSCHULZINVOICE_TOTAL
WHERE INVOICE_TOTAL > 250
---c
DROP VIEW LSCHULZINVOICE_TOTAL
-- 4
CREATE INDEX LSCHULZITEM_INDEX1 ON INVOICE_LINE(ITEM_ID)
-- 5
CREATE INDEX LSCHULZITEM_INDEX2 ON ITEM(CATEGORY)
-- 6
CREATE INDEX LSCHULZITEM_INDEX3 ON ITEM(CATEGORY, [LOCATION])
-- 7 (No idea if this is working properly but it accepts the syntax)
CREATE INDEX LSCHULZITEM_INDEX4 ON ITEM(CATEGORY DESC, [LOCATION])
-- 8
DROP INDEX INVOICE_LINE.LSCHULZITEM_INDEX1
DROP INDEX ITEM.LSCHULZITEM_INDEX2
DROP INDEX ITEM.LSCHULZITEM_INDEX3
DROP INDEX ITEM.LSCHULZITEM_INDEX4
-- 9
ALTER TABLE INVOICE_LINE
ADD CONSTRAINT FK_INVOICE_NUM 
FOREIGN KEY (INVOICE_NUM) REFERENCES INVOICES(INVOICE_NUM)
---b
Alter table INVOICE_LINE drop constraint FK_INVOICE_NUM
-- 10
Alter Table CUSTOMER
Add Constraint CUSTOMER_CREDIT_LIMIT Check (CREDIT_LIMIT in (250, 500, 750, 1000))
---b
Alter table CUSTOMER drop constraint CUSTOMER_CREDIT_LIMIT